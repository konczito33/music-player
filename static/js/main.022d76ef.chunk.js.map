{"version":3,"sources":["components/Song.js","components/Player.js","album.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","currentRotate","songImage","artist","songName","className","style","transform","alt","src","Player","isPlaying","setIsPlaying","audioRef","songInfo","setSonginfo","songs","setCurrentSong","buttonSize","getTime","time","Math","floor","slice","skipSongHandler","direction","a","currentIndex","findIndex","song","id","length","current","play","currentTime","background","colors","value","onInput","pause","type","max","duration","min","onChange","e","target","animationPercentage","onClick","size","icon","faAngleLeft","faPause","faPlay","faAngleRight","album","uuid","audio","LibrarySong","selectSongHandler","Library","libraryStatus","map","Nav","setLibraryStatus","faMusic","App","useRef","useState","setCurrentRotate","timeUpdateHandler","roundedCurrent","round","roundedDuration","rotateHandler","songEndHandler","setInterval","console","log","onTimeUpdate","ref","onLoadedMetadata","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.022d76ef.chunk.js","sourcesContent":["const Song = ({ currentSong, currentRotate }) => {\r\n  const { songImage, artist, songName } = currentSong;\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img\r\n        style={{\r\n          transform: `rotate(${currentRotate})`,\r\n        }}\r\n        alt={currentSong.songName}\r\n        src={songImage}\r\n      ></img>\r\n      <h1>{songName}</h1>\r\n      <h3>{artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSonginfo,\r\n  songs,\r\n  setCurrentSong,\r\n}) => {\r\n  const buttonSize = '2x';\r\n  //event handlers\r\n  const playSong = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(false);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSonginfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n  const stopWhileDragingHandler = () => {\r\n    setIsPlaying(false);\r\n    audioRef.current.pause();\r\n  };\r\n  const skipSongHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === 'back') {\r\n      await setCurrentSong(\r\n        songs[(currentIndex - 1 + songs.length) % songs.length],\r\n      );\r\n    }\r\n    if (direction === 'forward') {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.colors[0]}, ${currentSong.colors})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            value={songInfo.currentTime}\r\n            onInput={stopWhileDragingHandler}\r\n            type=\"range\"\r\n            max={songInfo.duration || 0}\r\n            min={0}\r\n            onChange={dragHandler}\r\n          />\r\n          <div\r\n            style={{\r\n              transform: `translateX(${songInfo.animationPercentage}%)`,\r\n            }}\r\n            className=\"animate-track\"\r\n          ></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <button\r\n          onClick={() => {\r\n            skipSongHandler('back');\r\n          }}\r\n          className=\"control-button skip-back\"\r\n        >\r\n          <FontAwesomeIcon\r\n            className=\"skip-back-i\"\r\n            size={buttonSize}\r\n            icon={faAngleLeft}\r\n          />\r\n        </button>\r\n        <button onClick={playSong} className=\"control-button play\">\r\n          <FontAwesomeIcon\r\n            className=\"play-i\"\r\n            size={buttonSize}\r\n            icon={isPlaying ? faPause : faPlay}\r\n          />\r\n        </button>\r\n        <button className=\"control-button skip-forward\">\r\n          <FontAwesomeIcon\r\n            onClick={() => {\r\n              skipSongHandler('forward');\r\n            }}\r\n            className=\"skip-forward-i\"\r\n            size={buttonSize}\r\n            icon={faAngleRight}\r\n          />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nconst album = () => {\r\n  return [\r\n    {\r\n      artist: 'Ian Ewing',\r\n      songName: 'Cambria',\r\n      songImage:\r\n        'https://chillhop.com/wp-content/uploads/2020/07/50758f405d2aba9cd6e8c4e6cfce44e4d9893714-1024x1024.jpg',\r\n      id: uuid(),\r\n      colors: ['#FA6563', '#22182B'],\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=8785',\r\n    },\r\n    {\r\n      artist: 'Ian Ewing',\r\n      songName: 'Midnight',\r\n      songImage:\r\n        'https://chillhop.com/wp-content/uploads/2020/07/50758f405d2aba9cd6e8c4e6cfce44e4d9893714-1024x1024.jpg',\r\n      id: uuid(),\r\n      colors: ['#FA6563', '#22182B'],\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=2430',\r\n    },\r\n    {\r\n      artist: 'Ian Ewing',\r\n      songName: 'Like I Am',\r\n      songImage:\r\n        'https://chillhop.com/wp-content/uploads/2020/07/50758f405d2aba9cd6e8c4e6cfce44e4d9893714-1024x1024.jpg',\r\n      id: uuid(),\r\n      colors: ['#FA6563', '#22182B'],\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=7964',\r\n    },\r\n    {\r\n      artist: 'mommy, Sleepy Fish',\r\n      songName: 'travelbag',\r\n      songImage:\r\n        'https://i.scdn.co/image/ab67616d0000b273e61a3d49a9256ceb24892f73',\r\n      id: uuid(),\r\n      colors: ['#5E91D3', '#FEFFFA'],\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=19058',\r\n    },\r\n    {\r\n      artist: 'mommy, Sleepy Fish',\r\n      songName: 'sozu',\r\n      songImage:\r\n        'https://i.scdn.co/image/ab67616d0000b273e61a3d49a9256ceb24892f73',\r\n      id: uuid(),\r\n      colors: ['#5E91D3', '#FEFFFA'],\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=19062',\r\n    },\r\n    {\r\n      artist: 'mommy, Sleepy Fish',\r\n      songName: 'exits',\r\n      songImage:\r\n        'https://i.scdn.co/image/ab67616d0000b273e61a3d49a9256ceb24892f73',\r\n      id: uuid(),\r\n      colors: ['#5E91D3', '#FEFFFA'],\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=19066',\r\n    },\r\n    {\r\n      artist: 'Middle School, Henry Gritton',\r\n      songName: 'Solstice',\r\n      songImage:\r\n        'https://i.scdn.co/image/ab67616d0000b27382a863c04b0f7d55c8afed01',\r\n      id: uuid(),\r\n      colors: ['#176243', '#FBE3B3'],\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=16175',\r\n    },\r\n    {\r\n      artist: 'xander., Blue Wednesday',\r\n      songName: 'Evening Stroll',\r\n      songImage:\r\n        'https://i.scdn.co/image/ab67616d0000b27382a863c04b0f7d55c8afed01',\r\n      id: uuid(),\r\n      colors: ['#176243', '#FBE3B3'],\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=16178',\r\n    },\r\n    {\r\n      artist: 'Misha',\r\n      songName: 'Talk ',\r\n      songImage:\r\n        'https://i.scdn.co/image/ab67616d0000b27382a863c04b0f7d55c8afed01',\r\n      id: uuid(),\r\n      colors: ['#176243', '#FBE3B3'],\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=16226',\r\n    },\r\n  ];\r\n};\r\n\r\nexport default album;\r\n","const LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  currentSong,\r\n  setIsPlaying,\r\n}) => {\r\n  const { songImage, artist, songName } = song;\r\n  const selectSongHandler = async () => {\r\n    await setCurrentSong(song);\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      onClick={selectSongHandler}\r\n      className={`library-song ${song.id === currentSong.id ? 'selected' : ''}`}\r\n    >\r\n      <img alt={songName} src={songImage}></img>\r\n      <div className=\"library-song-desc\">\r\n        <h3>{songName}</h3>\r\n        <h4>{artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import LibrarySong from './LibrarySong';\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  currentSong,\r\n  libraryStatus,\r\n  setIsPlaying,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? 'library-active' : ''}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            setCurrentSong={setCurrentSong}\r\n            songs={songs}\r\n            song={song}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            currentSong={currentSong}\r\n            setIsPlaying={setIsPlaying}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  const changeLibraryStatusHandler = () => {\r\n    if (libraryStatus) {\r\n      setLibraryStatus(false);\r\n    } else {\r\n      setLibraryStatus(true);\r\n    }\r\n  };\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick={changeLibraryStatusHandler}>\r\n        Library\r\n        <FontAwesomeIcon className=\"nav-button\" size={'lg'} icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\nexport default Nav;\r\n","import Song from './components/Song';\nimport Player from './components/Player';\nimport album from './album';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\nimport './styles/app.scss';\nimport { useState, useRef } from 'react';\n\nfunction App() {\n  //refs\n  const audioRef = useRef(null);\n\n  //state\n  const [songs, setSongs] = useState(album());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSonginfo] = useState({\n    currentTime: 0,\n    duration: null,\n    animationPercentage: 0,\n  });\n  let [currentRotate, setCurrentRotate] = useState(0);\n  const [actualIndex, setActualIndex] = useState(0);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  //handlers\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Calculate percantege\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animationPercentage = Math.round(\n      (roundedCurrent / roundedDuration) * 100,\n    );\n    setSonginfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage,\n    });\n    rotateHandler();\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  const rotateHandler = () => {\n    setInterval(() => {\n      setCurrentRotate((currentRotate += 1));\n      console.log('working', currentRotate);\n    }, 1000);\n  };\n  return (\n    <div className={`App ${libraryStatus ? 'library-transition' : ''}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} currentRotate={currentRotate} />\n      <Player\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSonginfo={setSonginfo}\n        setCurrentSong={setCurrentSong}\n        songs={songs}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onLoadedMetadata={timeUpdateHandler}\n        onEnded={songEndHandler}\n      ></audio>\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        libraryStatus={libraryStatus}\n        setIsPlaying={setIsPlaying}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}